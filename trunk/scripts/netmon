<script src="lib/servicemonitor.swf" type="application/x-shockwave-flash" />

air.NativeApplication.nativeApplication.addEventListener(air.Event.NETWORK_CHANGE, sonicAlert.onNetworkChange);
this.onNetworkChange(true); //check if available
	
var networkMonitor;	
onNetworkChange: function(e){
		$(this).log("Network Change");
		
		try { //Check resource availability 
			networkMonitor = new air.URLMonitor(new air.URLRequest( prefs.monitorURL ));
			networkMonitor.addEventListener(air.StatusEvent.STATUS, sonicAlert.alertNetworkChange);
			networkMonitor.start();
		} 
		catch (err) {
		 	$(this).log("Error communicating with "+ prefs.monitorURL);
		}

	},
alertNetworkChange: function(e){
	$(this).log("network available = " + networkMonitor.available);
	if(networkMonitor.available)
		shoutplay.restart();
	else
		shoutplay.stop();
}